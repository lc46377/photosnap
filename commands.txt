terraform apply \                                             
  -var="db_password=password" \
  -var="enable_nat=false" \
  -auto-approve

export VPC_ID=$(terraform -chdir=terraform output -raw vpc_id)
export PUB_SUBNETS=$(terraform -chdir=terraform output -raw public_subnet_ids)
export BUCKET=$(terraform -chdir=terraform output -raw bucket_name)
export DB_ENDPT=$(terraform -chdir=terraform output -raw db_endpoint)

aws cloudformation deploy \                            
  --template-file cfn/ec2-asg.yml \
  --stack-name photosnap-ec2-asg \
  --parameter-overrides \
    VpcId=$VPC_ID \
    PublicSubnetIds="$PUB_SUBNETS" \
    AmiId=ami-085386e29e44dacd7 \
    KeyName=MyKeyPair \
    SnapsBucket="$BUCKET" \
    DbEndpoint="$DB_ENDPT" \
    DbUsername=photosnap_user \
    DbPassword=password \
    AwsRegion=us-east-1 \
    InstanceType=t2.micro \
  --capabilities CAPABILITY_NAMED_IAM


export ALB_URL="http://$(aws cloudformation describe-stacks \
  --stack-name photosnap-ec2-asg \
  --query "Stacks[0].Outputs[?OutputKey=='LoadBalancerDNS'].OutputValue" \
  --output text)"
echo "ALB → $ALB_URL"

curl -v -X POST $ALB_URL/upload \
  -H "Content-Type: application/json" \
  -d '{"filename":"smoke-test.jpg"}'

RESP=$(curl -s -X POST $ALB_URL/upload \
  -H "Content-Type: application/json" \
  -d '{"filename":"smoke-test.jpg"}')
PUT_URL=$(jq -r .put_url <<<"$RESP")
curl --upload-file ./smoke-test.jpg "$PUT_URL" && echo "✅ uploaded"


GET_URL=$(jq -r .get_url <<<"$RESP")
curl -s "$GET_URL" -o downloaded.jpg && echo "✅ downloaded"


RAW_BUCKET=$(terraform -chdir=terraform output -raw bucket_name) 
aws s3 cp lambda/s3_logger.zip s3://$RAW_BUCKET/lambda/s3_logger.zip
#logging
aws cloudformation deploy \
  --template-file cfn/s3-logger.yml \
  --stack-name photosnap-s3-logger \
  --parameter-overrides RawSnapsBucket=$RAW_BUCKET \
  --capabilities CAPABILITY_NAMED_IAM
